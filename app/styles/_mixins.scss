@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-row-center {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}

@mixin flex-column-center {
  display: flex;
  justify-content: center;
  flex-direction: column;
}

@mixin flex-end-column-center-start {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-start;
}

@mixin flex-center-space-betwen {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin respond-to($breakpoint, $type: min) {
  // xs: 0,
  // sm: 640px,
  // md: 768px,
  // lg: 1024px,
  // xl: 1280px,
  @if map-has-key($breakpoints, $breakpoint) {
    $width: map-get($breakpoints, $breakpoint);
    @if $type == min {
      @media screen and (min-width: $width) {
        @content;
      }
    } @else if $type == max {
      @media screen and (max-width: ( $width - 1)) {
        @content;
      }
    } @else {
      @error "Invalid type: #{$type}. Use 'min' or 'max'.";
    }
  } @else {
    @error "Invalid breakpoint: #{$breakpoint}. Check your breakpoints map.";
  }
}
